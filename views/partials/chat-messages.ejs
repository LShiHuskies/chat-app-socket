<div class="ui basic segment" style="height: 70vh;">
    <h3>Community Conversations</h3>
    <hr>
    <div id="chat-content" class="ui feed"> </div>
    </div>
    
    <script id="chatTemplate" type="text/x-jsrender">
    <div class="event">
      <div class="label">
         <img src="{{:createdBy.avatar}}">
      </div>
      <div class="content">
        <div class="summary">
          <a href="#"> {{:createdBy.name}}</a> posted on
          <div class="date">
            {{:createdAt}}
          </div>
        </div>
        <div class="extra text">
             {{:message}}
        </div>
      </div>
    </div>
    </script>
    
    <script type="text/javascript">
    
    function loadMessages() {
      // Load existing chat messages
      io.socket.get('/chatMessage', function(messages, response) {
        renderChatMessages(messages);
      });
    
      // Listen for new chat messages
      io.socket.on('chatmessage', function(body) {
        renderChatMessages(body.data);
      });
    }
    
    function renderChatMessages(data) {

    if (data.length) {
      data.forEach(user => {
         const event = document.createElement('div');
         event.className = 'event';
         const label = document.createElement('div');
         label.className = 'label';
         const img = document.createElement('img');
         img.src = user.createdBy.avatar;
         label.appendChild(img);
         event.appendChild(label);

        const content = document.createElement('div');
        content.className = 'content';
        const summary = document.createElement('div');
        summary.className = 'summary';
        const a = document.createElement('a');
        a.href = '#';
        a.innerHTML = user.createdBy.name;
        // posted on
        const date = document.createElement('div');
        date.className = 'date';
        date.innerHTML = user.createdAt
        summary.appendChild(a);
        summary.innerHTML += ' posted on';
        summary.appendChild(date);
        content.appendChild(summary);
        const text = document.createElement('div');
        text.className = 'extra text';
        text.innerHTML = user.message;
        content.appendChild(text);
        const chatTemplate  = document.getElementById('chat-content');

        chatTemplate.appendChild(event);
        chatTemplate.appendChild(content);
        
      });
    //   const chatContent = $('#chat-content');
    //   const template = $.templates('#chatTemplate');
    //   let htmlOutput = template.render(data);
    //   chatContent.append(htmlOutput);
    //   // automatically scroll downwards
    //   const scrollHeight = chatContent.prop("scrollHeight");
    //   chatContent.animate({ scrollTop: scrollHeight }, "slow");
     } else {
        const event = document.createElement('div');
         event.className = 'event';
         const label = document.createElement('div');
         label.className = 'label';
         const img = document.createElement('img');
         img.src = data.createdBy.avatar;
         label.appendChild(img);
         event.appendChild(label);

        const content = document.createElement('div');
        content.className = 'content';
        const summary = document.createElement('div');
        summary.className = 'summary';
        const a = document.createElement('a');
        a.href = '#';
        a.innerHTML = `${data.createdBy.name}`;
        // posted on
        const date = document.createElement('div');
        date.className = 'date';
        date.innerHTML = data.createdAt
        summary.appendChild(a);
        summary.innerHTML += 'posted on';
        summary.appendChild(date);
        const text = document.createElement('div');
        text.className = 'extra text';
        text.innerHTML = data.message;
        content.appendChild(text);
        const chatTemplate  = document.getElementById('chat-content');
        chatTemplate.appendChild(event);
        chatTemplate.appendChild(content);
     } 
    }
    
    </script>